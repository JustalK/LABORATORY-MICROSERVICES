"use strict";
exports.__esModule = true;
exports.Music = void 0;
var Music = /** @class */ (function () {
    function Music(faker) {
        this.faker = faker;
        // Bind `this` so namespaced is working correctly
        for (var _i = 0, _a = Object.getOwnPropertyNames(Music.prototype); _i < _a.length; _i++) {
            var name_1 = _a[_i];
            if (name_1 === 'constructor' || typeof this[name_1] !== 'function') {
                continue;
            }
            this[name_1] = this[name_1].bind(this);
        }
        // TODO @Shinigami92 2022-01-12: We should find a better strategy as assigning this property to a function
        // @ts-expect-error
        this.genre.schema = {
            description: 'Generates a genre.',
            sampleResults: ['Rock', 'Metal', 'Pop']
        };
    }
    /**
     * genre
     *
     * @method faker.music.genre
     */
    Music.prototype.genre = function () {
        return this.faker.random.arrayElement(this.faker.definitions.music.genre);
    };
    return Music;
}());
exports.Music = Music;
