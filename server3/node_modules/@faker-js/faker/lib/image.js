"use strict";
exports.__esModule = true;
exports.Image = void 0;
var Lorempixel = require('./image_providers/lorempixel');
var Unsplash = require('./image_providers/unsplash');
var LoremPicsum = require('./image_providers/lorempicsum');
/**
 * Default provider is unsplash image provider.
 */
var Image = /** @class */ (function () {
    function Image(faker) {
        this.faker = faker;
        // Bind `this` so namespaced is working correctly
        for (var _i = 0, _a = Object.getOwnPropertyNames(Image.prototype); _i < _a.length; _i++) {
            var name_1 = _a[_i];
            if (name_1 === 'constructor' || typeof this[name_1] !== 'function') {
                continue;
            }
            this[name_1] = this[name_1].bind(this);
        }
        this.lorempixel = new Lorempixel(this.faker);
        this.unsplash = new Unsplash(this.faker);
        this.lorempicsum = new LoremPicsum(this.faker);
    }
    /**
     * image
     *
     * @method faker.image.image
     * @param width
     * @param height
     * @param randomize
     */
    Image.prototype.image = function (width, height, randomize) {
        var categories = [
            'abstract',
            'animals',
            'business',
            'cats',
            'city',
            'food',
            'nightlife',
            'fashion',
            'people',
            'nature',
            'sports',
            'technics',
            'transport',
        ];
        return this[this.faker.random.arrayElement(categories)](width, height, randomize);
    };
    /**
     * avatar
     *
     * @method faker.image.avatar
     */
    Image.prototype.avatar = function () {
        return this.faker.internet.avatar();
    };
    /**
     * imageUrl
     *
     * @method faker.image.imageUrl
     * @param width
     * @param height
     * @param category
     * @param randomize
     */
    Image.prototype.imageUrl = function (width, height, category, randomize, https) {
        width || (width = 640);
        height || (height = 480);
        var protocol = 'http://';
        if (typeof https !== 'undefined' && https === true) {
            protocol = 'https://';
        }
        var url = protocol + 'placeimg.com/' + width + '/' + height;
        if (typeof category !== 'undefined') {
            url += '/' + category;
        }
        if (randomize) {
            url += '?' + this.faker.datatype.number();
        }
        return url;
    };
    /**
     * abstract
     *
     * @method faker.image.abstract
     * @param width
     * @param height
     * @param randomize
     */
    Image.prototype.abstract = function (width, height, randomize) {
        return this.faker.image.imageUrl(width, height, 'abstract', randomize);
    };
    /**
     * animals
     *
     * @method faker.image.animals
     * @param width
     * @param height
     * @param randomize
     */
    Image.prototype.animals = function (width, height, randomize) {
        return this.faker.image.imageUrl(width, height, 'animals', randomize);
    };
    /**
     * business
     *
     * @method faker.image.business
     * @param width
     * @param height
     * @param randomize
     */
    Image.prototype.business = function (width, height, randomize) {
        return this.faker.image.imageUrl(width, height, 'business', randomize);
    };
    /**
     * cats
     *
     * @method faker.image.cats
     * @param width
     * @param height
     * @param randomize
     */
    Image.prototype.cats = function (width, height, randomize) {
        return this.faker.image.imageUrl(width, height, 'cats', randomize);
    };
    /**
     * city
     *
     * @method faker.image.city
     * @param width
     * @param height
     * @param randomize
     */
    Image.prototype.city = function (width, height, randomize) {
        return this.faker.image.imageUrl(width, height, 'city', randomize);
    };
    /**
     * food
     *
     * @method faker.image.food
     * @param width
     * @param height
     * @param randomize
     */
    Image.prototype.food = function (width, height, randomize) {
        return this.faker.image.imageUrl(width, height, 'food', randomize);
    };
    /**
     * nightlife
     *
     * @method faker.image.nightlife
     * @param width
     * @param height
     * @param randomize
     */
    Image.prototype.nightlife = function (width, height, randomize) {
        return this.faker.image.imageUrl(width, height, 'nightlife', randomize);
    };
    /**
     * fashion
     *
     * @method faker.image.fashion
     * @param width
     * @param height
     * @param randomize
     */
    Image.prototype.fashion = function (width, height, randomize) {
        return this.faker.image.imageUrl(width, height, 'fashion', randomize);
    };
    /**
     * people
     *
     * @method faker.image.people
     * @param width
     * @param height
     * @param randomize
     */
    Image.prototype.people = function (width, height, randomize) {
        return this.faker.image.imageUrl(width, height, 'people', randomize);
    };
    /**
     * nature
     *
     * @method faker.image.nature
     * @param width
     * @param height
     * @param randomize
     */
    Image.prototype.nature = function (width, height, randomize) {
        return this.faker.image.imageUrl(width, height, 'nature', randomize);
    };
    /**
     * sports
     *
     * @method faker.image.sports
     * @param width
     * @param height
     * @param randomize
     */
    Image.prototype.sports = function (width, height, randomize) {
        return this.faker.image.imageUrl(width, height, 'sports', randomize);
    };
    /**
     * technics
     *
     * @method faker.image.technics
     * @param width
     * @param height
     * @param randomize
     */
    Image.prototype.technics = function (width, height, randomize) {
        return this.faker.image.imageUrl(width, height, 'technics', randomize);
    };
    /**
     * transport
     *
     * @method faker.image.transport
     * @param width
     * @param height
     * @param randomize
     */
    Image.prototype.transport = function (width, height, randomize) {
        return this.faker.image.imageUrl(width, height, 'transport', randomize);
    };
    /**
     * dataUri
     *
     * @method faker.image.dataUri
     * @param width
     * @param height
     * @param color
     */
    Image.prototype.dataUri = function (width, height, color) {
        if (color === void 0) { color = 'grey'; }
        var svgString = '<svg xmlns="http://www.w3.org/2000/svg" version="1.1" baseProfile="full" width="' +
            width +
            '" height="' +
            height +
            '"><rect width="100%" height="100%" fill="' +
            color +
            '"/><text x="' +
            width / 2 +
            '" y="' +
            height / 2 +
            '" font-size="20" alignment-baseline="middle" text-anchor="middle" fill="white">' +
            width +
            'x' +
            height +
            '</text></svg>';
        var rawPrefix = 'data:image/svg+xml;charset=UTF-8,';
        return rawPrefix + encodeURIComponent(svgString);
    };
    return Image;
}());
exports.Image = Image;
