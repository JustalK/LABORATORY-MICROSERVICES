import type { Faker } from '.';
declare const Lorempixel: any;
declare const Unsplash: any;
declare const LoremPicsum: any;
/**
 * Default provider is unsplash image provider.
 */
export declare class Image {
    private readonly faker;
    readonly lorempixel: typeof Lorempixel;
    readonly unsplash: typeof Unsplash;
    readonly lorempicsum: typeof LoremPicsum;
    constructor(faker: Faker);
    /**
     * image
     *
     * @method faker.image.image
     * @param width
     * @param height
     * @param randomize
     */
    image(width?: number, height?: number, randomize?: boolean): string;
    /**
     * avatar
     *
     * @method faker.image.avatar
     */
    avatar(): string;
    /**
     * imageUrl
     *
     * @method faker.image.imageUrl
     * @param width
     * @param height
     * @param category
     * @param randomize
     */
    imageUrl(width?: number, height?: number, category?: string, randomize?: boolean, https?: boolean): string;
    /**
     * abstract
     *
     * @method faker.image.abstract
     * @param width
     * @param height
     * @param randomize
     */
    abstract(width?: number, height?: number, randomize?: boolean): string;
    /**
     * animals
     *
     * @method faker.image.animals
     * @param width
     * @param height
     * @param randomize
     */
    animals(width?: number, height?: number, randomize?: boolean): string;
    /**
     * business
     *
     * @method faker.image.business
     * @param width
     * @param height
     * @param randomize
     */
    business(width?: number, height?: number, randomize?: boolean): string;
    /**
     * cats
     *
     * @method faker.image.cats
     * @param width
     * @param height
     * @param randomize
     */
    cats(width?: number, height?: number, randomize?: boolean): string;
    /**
     * city
     *
     * @method faker.image.city
     * @param width
     * @param height
     * @param randomize
     */
    city(width?: number, height?: number, randomize?: boolean): string;
    /**
     * food
     *
     * @method faker.image.food
     * @param width
     * @param height
     * @param randomize
     */
    food(width?: number, height?: number, randomize?: boolean): string;
    /**
     * nightlife
     *
     * @method faker.image.nightlife
     * @param width
     * @param height
     * @param randomize
     */
    nightlife(width?: number, height?: number, randomize?: boolean): string;
    /**
     * fashion
     *
     * @method faker.image.fashion
     * @param width
     * @param height
     * @param randomize
     */
    fashion(width?: number, height?: number, randomize?: boolean): string;
    /**
     * people
     *
     * @method faker.image.people
     * @param width
     * @param height
     * @param randomize
     */
    people(width?: number, height?: number, randomize?: boolean): string;
    /**
     * nature
     *
     * @method faker.image.nature
     * @param width
     * @param height
     * @param randomize
     */
    nature(width?: number, height?: number, randomize?: boolean): string;
    /**
     * sports
     *
     * @method faker.image.sports
     * @param width
     * @param height
     * @param randomize
     */
    sports(width?: number, height?: number, randomize?: boolean): string;
    /**
     * technics
     *
     * @method faker.image.technics
     * @param width
     * @param height
     * @param randomize
     */
    technics(width?: number, height?: number, randomize?: boolean): string;
    /**
     * transport
     *
     * @method faker.image.transport
     * @param width
     * @param height
     * @param randomize
     */
    transport(width?: number, height?: number, randomize?: boolean): string;
    /**
     * dataUri
     *
     * @method faker.image.dataUri
     * @param width
     * @param height
     * @param color
     */
    dataUri(width?: number, height?: number, color?: string): string;
}
export {};
