"use strict";
exports.__esModule = true;
exports.Animal = void 0;
var Animal = /** @class */ (function () {
    function Animal(faker) {
        this.faker = faker;
        // Bind `this` so namespaced is working correctly
        for (var _i = 0, _a = Object.getOwnPropertyNames(Animal.prototype); _i < _a.length; _i++) {
            var name_1 = _a[_i];
            if (name_1 === 'constructor' || typeof this[name_1] !== 'function') {
                continue;
            }
            this[name_1] = this[name_1].bind(this);
        }
    }
    /**
     * dog
     *
     * @method faker.animal.dog
     */
    Animal.prototype.dog = function () {
        return this.faker.random.arrayElement(this.faker.definitions.animal.dog);
    };
    /**
     * cat
     *
     * @method faker.animal.cat
     */
    Animal.prototype.cat = function () {
        return this.faker.random.arrayElement(this.faker.definitions.animal.cat);
    };
    /**
     * snake
     *
     * @method faker.animal.snake
     */
    Animal.prototype.snake = function () {
        return this.faker.random.arrayElement(this.faker.definitions.animal.snake);
    };
    /**
     * bear
     *
     * @method faker.animal.bear
     */
    Animal.prototype.bear = function () {
        return this.faker.random.arrayElement(this.faker.definitions.animal.bear);
    };
    /**
     * lion
     *
     * @method faker.animal.lion
     */
    Animal.prototype.lion = function () {
        return this.faker.random.arrayElement(this.faker.definitions.animal.lion);
    };
    /**
     * cetacean
     *
     * @method faker.animal.cetacean
     */
    Animal.prototype.cetacean = function () {
        return this.faker.random.arrayElement(this.faker.definitions.animal.cetacean);
    };
    /**
     * horse
     *
     * @method faker.animal.horse
     */
    Animal.prototype.horse = function () {
        return this.faker.random.arrayElement(this.faker.definitions.animal.horse);
    };
    /**
     * bird
     *
     * @method faker.animal.bird
     */
    Animal.prototype.bird = function () {
        return this.faker.random.arrayElement(this.faker.definitions.animal.bird);
    };
    /**
     * cow
     *
     * @method faker.animal.cow
     */
    Animal.prototype.cow = function () {
        return this.faker.random.arrayElement(this.faker.definitions.animal.cow);
    };
    /**
     * fish
     *
     * @method faker.animal.fish
     */
    Animal.prototype.fish = function () {
        return this.faker.random.arrayElement(this.faker.definitions.animal.fish);
    };
    /**
     * crocodilia
     *
     * @method faker.animal.crocodilia
     */
    Animal.prototype.crocodilia = function () {
        return this.faker.random.arrayElement(this.faker.definitions.animal.crocodilia);
    };
    /**
     * insect
     *
     * @method faker.animal.insect
     */
    Animal.prototype.insect = function () {
        return this.faker.random.arrayElement(this.faker.definitions.animal.insect);
    };
    /**
     * rabbit
     *
     * @method faker.animal.rabbit
     */
    Animal.prototype.rabbit = function () {
        return this.faker.random.arrayElement(this.faker.definitions.animal.rabbit);
    };
    /**
     * type
     *
     * @method faker.animal.type
     */
    Animal.prototype.type = function () {
        return this.faker.random.arrayElement(this.faker.definitions.animal.type);
    };
    return Animal;
}());
exports.Animal = Animal;
