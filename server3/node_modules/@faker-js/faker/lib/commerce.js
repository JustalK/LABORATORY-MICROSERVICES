"use strict";
exports.__esModule = true;
exports.Commerce = void 0;
var Commerce = /** @class */ (function () {
    function Commerce(faker) {
        this.faker = faker;
        // Bind `this` so namespaced is working correctly
        for (var _i = 0, _a = Object.getOwnPropertyNames(Commerce.prototype); _i < _a.length; _i++) {
            var name_1 = _a[_i];
            if (name_1 === 'constructor' || typeof this[name_1] !== 'function') {
                continue;
            }
            this[name_1] = this[name_1].bind(this);
        }
    }
    /**
     * color
     *
     * @method faker.commerce.color
     */
    Commerce.prototype.color = function () {
        return this.faker.random.arrayElement(this.faker.definitions.commerce.color);
    };
    /**
     * department
     *
     * @method faker.commerce.department
     */
    Commerce.prototype.department = function () {
        return this.faker.random.arrayElement(this.faker.definitions.commerce.department);
    };
    /**
     * productName
     *
     * @method faker.commerce.productName
     */
    Commerce.prototype.productName = function () {
        return (this.faker.commerce.productAdjective() +
            ' ' +
            this.faker.commerce.productMaterial() +
            ' ' +
            this.faker.commerce.product());
    };
    /**
     * price
     *
     * @method faker.commerce.price
     * @param min
     * @param max
     * @param dec
     * @param symbol
     */
    Commerce.prototype.price = function (min, max, dec, symbol) {
        if (min === void 0) { min = 1; }
        if (max === void 0) { max = 1000; }
        if (dec === void 0) { dec = 2; }
        if (symbol === void 0) { symbol = ''; }
        if (min < 0 || max < 0) {
            return symbol + 0.0;
        }
        var randValue = this.faker.datatype.number({ max: max, min: min });
        return (symbol +
            (Math.round(randValue * Math.pow(10, dec)) / Math.pow(10, dec)).toFixed(dec));
    };
    // TODO @Shinigami92 2022-01-12: unimplemented member functions
    /*
      categories (num) {
          var categories = [];
  
          do {
              var category = this.faker.random.arrayElement(this.faker.definitions.commerce.department);
              if(categories.indexOf(category) === -1) {
                  categories.push(category);
              }
          } while(categories.length < num);
  
          return categories;
      };
  
      */
    /*
      mergeCategories (categories) {
          var separator = this.faker.definitions.separator || " &";
          // TODO: find undefined here
          categories = categories || this.faker.definitions.commerce.categories;
          var commaSeparated = categories.slice(0, -1).join(', ');
  
          return [commaSeparated, categories[categories.length - 1]].join(separator + " ");
      };
      */
    /**
     * productAdjective
     *
     * @method faker.commerce.productAdjective
     */
    Commerce.prototype.productAdjective = function () {
        return this.faker.random.arrayElement(this.faker.definitions.commerce.product_name.adjective);
    };
    /**
     * productMaterial
     *
     * @method faker.commerce.productMaterial
     */
    Commerce.prototype.productMaterial = function () {
        return this.faker.random.arrayElement(this.faker.definitions.commerce.product_name.material);
    };
    /**
     * product
     *
     * @method faker.commerce.product
     */
    Commerce.prototype.product = function () {
        return this.faker.random.arrayElement(this.faker.definitions.commerce.product_name.product);
    };
    /**
     * productDescription
     *
     * @method faker.commerce.productDescription
     */
    Commerce.prototype.productDescription = function () {
        return this.faker.random.arrayElement(this.faker.definitions.commerce.product_description);
    };
    return Commerce;
}());
exports.Commerce = Commerce;
