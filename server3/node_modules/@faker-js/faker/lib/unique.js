"use strict";
exports.__esModule = true;
exports.Unique = void 0;
var uniqueExec = require('../vendor/unique');
var Unique = /** @class */ (function () {
    // time the script started
    // startTime: number = 0;
    function Unique() {
        // maximum time unique.exec will attempt to run before aborting
        this.maxTime = 10;
        // maximum retries unique.exec will recurse before aborting ( max loop depth )
        this.maxRetries = 10;
        // Bind `this` so namespaced is working correctly
        for (var _i = 0, _a = Object.getOwnPropertyNames(Unique.prototype); _i < _a.length; _i++) {
            var name_1 = _a[_i];
            if (name_1 === 'constructor' || typeof this[name_1] !== 'function') {
                continue;
            }
            this[name_1] = this[name_1].bind(this);
        }
    }
    /**
     * unique
     *
     * @method unique
     */
    Unique.prototype.unique = function (method, args, opts) {
        opts || (opts = {});
        opts.startTime = new Date().getTime();
        if (typeof opts.maxTime !== 'number') {
            opts.maxTime = this.maxTime;
        }
        if (typeof opts.maxRetries !== 'number') {
            opts.maxRetries = this.maxRetries;
        }
        opts.currentIterations = 0;
        return uniqueExec.exec(method, args, opts);
    };
    return Unique;
}());
exports.Unique = Unique;
